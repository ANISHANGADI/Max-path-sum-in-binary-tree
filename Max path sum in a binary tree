/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int func(TreeNode* root, int &diameter)
    {   
       // int maxi=INT_MIN;
        if(root == NULL)
        return 0;
        int left = max(0,func(root->left,diameter));
        int right = max(0,func(root->right,diameter));
        diameter = max(diameter,root->val+left+right);
        return (root->val)+ max(left,right);
    }
    int maxPathSum(TreeNode* root) {
        int diameter = INT_MIN;
        func(root,diameter);
        return diameter;
    }
};
